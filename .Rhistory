5+5
5*5
5%5
my_character<-40
my_apples<-forty
my_apples<-"forty""
1
my_char
my_char<-"forty"
remove(my_character)
class (my_char)
my_bool<-true
my_bool<-9
remove(my_bool)
numeric_v <- c(1,2,3)
numeric_v
numeric_v[1]
numeric_v[4]
numeric_v[3]
numeric_v[2:3]
my_decimal <- 1.2
remove(my_decimal)
my_bool <- false
class (numeric_v)
mixed <- c("str",2)
mix
mixed
some_vector <- c("AB","CD")
some_vector
poker_vector <- c(1,2,-3,4,5)
names(poker_vector)
names(poker_vector) <- c("A","B","C","D","E")
poker_vector
sum(pok)
sum(poker_vector)
poker_vector + 5
poker_vector
poker_vector[c(2,3,4)]
poker_vector[c(2,3,1)]
poker_vector["Monday"]
poker_vector["A"]
poker_vector > 0
poker_vector[poker_vector > 0]
mat = matrix(1:9,byrow = TRUE,nrow = 3)
mat
mat = matrix(1:9,byrow = TRUE,nrow = 2)
mat = matrix(1:9,byrow = TRUE,nrow = 9)
ma
mat
mat = matrix(1:9,bycoloumn = TRUE,nrow = 3)
mat = matrix(1:9,bycoloumn = TRUE,ncoloumn = 3)
mat = matrix(1:9,bycolumn = TRUE,ncolumn = 3)
mat = matrix(1:9,byrow = TRUE,nrow = 9)
mat
mat = matrix(1:9,byrow = TRUE,nrow = 1)
mat
mat[1:2,1:2]
mat = matrix(1:9,byrow = TRUE,nrow = 9)
mat
mat = matrix(1:9,byrow = TRUE,nrow = 3)
mat
mat[1:2,1:2]
matrix(10,nrw = 3,ncol = 5)
matrix(10,nrow = 3,ncol = 5)
matrix(1:15,nrow = 3,ncol = 5)
mat
rownames(mat ) <- c("a","b","c")
mat
mat
colnames(mat ) <- c("a","b","c")
mat
colnames(mat ) <- c("d","e","f")
mat
mat["a"]
mat["a",1]
nrow(mat)
rowSums(mat)
colSums(mat)
mat[1,]
View(maat)
View(mat)
gender_vector <- c("M","F,"M","F")
gender_vector <- c("M","F","M","F")
gender_vector
factor(gender_vector)
factor_gender_vector <- factor(gender_vector)
factor_gender_vector <- factor(gender_vector)
factor_gender_vector
class(factor_gender_vector)
temperature_vector <- c("L","H","H","L")
temperature_vector
factor(temperature_vector,order = TRUE ,levels = c("L","H"))
r <- factor(temperature_vector,order = TRUE ,levels = c("L","H"))
summary(r)
summary(poker_vector)
poker_vector
summary(poker_vector)
var(poker_vector)
sd(poker_vector)
head(poker_vector)
head(poker_vector,2)
tail(poker_vector,2)
dest <- data.fram(poker_vector)
dest <- data.frame(poker_vector)
dest
poker_vector > 0
dest$won <- poker_vector > 0
dest
dest$poker_vector
dest$won
str(dest)
subset(dest,subset = poker_vector > 0)
a <- c(12,9,6)
oder(a)
order(a)
a[order(a)]
a[order(a,decreasing = TRUE)]
"user" == "user"
"user" == "User"
"raining" == "raining dogs"
"raining" <= "raining dogs"
"raining" >= "raining dogs"
"hello" > "Goodbye"
"aello" > "Goodbye"
primes <- c(2,3,5,7,11,13)
primes
for(p in primes)
print(p)
number <- sample(1:6,size-1)
args(poker_vector)
.3
u.* h9
install.packages('rattle')
library(rattle)
install.packages('RColorBrewer')
install.packages('rpart.plot')
library(rpart.plot)
library(RColorBrewer)
install.packages('rattle')
library(rattle)
library(rattle)
library(rpart.plot)
rattle()
library(rattle)
library(rpart.plot)
train <- read.csv("C:/Users/RITI/Dropbox/IBM/Bluemix/Data Analytics Challenge/TitanicShinyApplication-master/TitanicShinyApplication-master/data/train.csv")
View(train)
test <- read.csv("C:/Users/RITI/Dropbox/IBM/Bluemix/Data Analytics Challenge/TitanicShinyApplication-master/TitanicShinyApplication-master/data/test.csv")
View(test)
#Decision Tree Algorithm
library(rpart)
fit <- rpart(Survived ~ Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,data=train,method = "class")
plot(fit)
text(fit)
#loading the graphics packages
library(rattle)
library(rpart.plot)
library(RColorBrewer)
fancyRpartPlot(fit)
Prediction <- predict(fit, test,type = "class")
submit <- data.frame(PassengerId = test$PassengerId,Survived = Prediction)
write.csv(submit,file = "Prediction_DTA.csv",row.names = FALSE)
setwd("~/")
View(test)
View(submit)
setwd("C:/Users/RITI/Dropbox/IBM/Bluemix/Data Analytics Challenge")
#Decision Tree Algorithm
library(rpart)
fit <- rpart(Survived ~ Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,data=train,method = "class")
plot(fit)
text(fit)
#loading the graphics packages
library(rattle)
library(rpart.plot)
library(RColorBrewer)
#plot the fit data using rplot
fancyRpartPlot(fit)
# to create a survival prediction based on the fit data
Prediction <- predict(fit, test,type = "class")
submit <- data.frame(PassengerId = test$PassengerId,Survived = Prediction)
write.csv(submit,file = "Prediction_DTA.csv",row.names = FALSE)
?part.control
?rpart.control
fit2 <- rpart(Survived ~ Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,data=train,method = "class",control = rpart.control(minsplit= 2,cp = 0))
fancyRpartPlot(fit2)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=train,
method="class",
control=rpart.control( control = rpart.control(minsplit= 2,cp = 0)))
new.fit <- prp(fit,snip=TRUE)$obj
fancyRpartPlot(new.fit)
fancyRpartPlot(new.fit)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=train,
method="class",
control=rpart.control( control = rpart.control(minsplit= 2,cp = 0)))
new.fit <- prp(fit,snip=TRUE)$obj
fancyRpartPlot(new.fit)
View(test)
table[train$Age == "NA"]
train$Age =="NA"
if(train$Age =="NA") {print(table[train])}
grep("NA",all_data$Fare)
grep("NA",train$Age)
fancyRpartPlot(fit)
